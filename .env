VITE_API_KEY = AIzaSyC5UDFqu7fEeWVNlu3ymKhWJghVoVSxC6E;
VITE_CLOUDINARY_CLOUD_NAME=dveyxz1jy
VITE_CLOUDINARY_UPLOAD_PRESET=ReactChat_unsigned;
VITE_api_key_cloudinary =  187129618534692
VITE_api_secret_cloudinary =  xffQa3h0wNtLN2rSye;

# const handleadd = async() =>{
#         const chatRef = collection(db, "chats");
#         const userChatsRef = collection(db, "userchats");
#         try{
#             const newChatRef = doc(chatRef);
#             await setDoc(newChatRef, {
#                 createdAt: serverTimestamp(),
#                 messages: [],
#             }, {merge: true});

#             await updateDoc (doc(userChatsRef, user.id),{
#                 chats:arrayUnion({
#                     chatId: newChatRef.id,
#                     lastMessage: "",
#                     receiverId: currentUser.id,
#                     updatedAt:Date.now(),
#                 }),
#             });
#             await updateDoc (doc(userChatsRef, currentUser.id),{
#                 chats:arrayUnion({
#                     chatId: newChatRef.id,
#                     lastMessage: "",
#                     receiverId: user.id,
#                     updatedAt:Date.now(),
#                 }),
#             });


#             console.log(newChatRef);
#             console.log(newChatRef.id);

#         }catch(err) {
#             console.log(err)

#         }
#     };



# //main code of adduser
# import "./addUser.css";
# import { db } from "../../../../lib/firebase";
# import { getDocs, collection, query, where, serverTimestamp } from "firebase/firestore";
# import { useState } from "react";
# import { doc, setDoc } from "firebase/firestore";
# import { useUserStore } from "../../../../lib/userStore";
# import { updateDoc, arrayUnion } from "firebase/firestore";
# import {  onSnapshot } from "firebase/firestore";


# const AddUser = () =>{
#     const [user, setUser] = useState(null);
#     const {currentUser} = useUserStore();

#     const handleSearch  = async(e) =>{
#         e.preventDefault();
#         const formData = new FormData(e.target);
#         const username = formData.get("username");

#         try{
#             const userRef = collection(db, "users");


# const q = query(userRef, where("username", "==", username));
# const querySnapShot = await getDocs(q);
# if (!querySnapShot.empty) {
#     const docSnap = querySnapShot.docs[0];
#     setUser({ id: docSnap.id, ...docSnap.data() });
# } else {
#     setUser(null);
# }



#         }catch(err) {
#             console.log(err);
#         }
#     };

#     const handleadd = async() =>{
#         const chatRef = collection(db, "chats");
#         const userChatsRef = collection(db, "userchats");
#         try{
#             const newChatRef = doc(chatRef);
#             await setDoc(newChatRef, {
#                 createdAt: serverTimestamp(),
#                 messages: [],
#             });

#             await updateDoc(doc(db, "userchats", user.id), {
#     chats: arrayUnion({
#         chatId: newChatRef.id,
#         lastMessage: "",
#         receiverId: currentUser.id,
#         updatedAt: Date.now(), // optional: replace with serverTimestamp()
#     }),
# });
# await updateDoc(doc(db, "userchats", currentUser.id), {
#     chats: arrayUnion({
#         chatId: newChatRef.id,
#         lastMessage: "",
#         receiverId: user.id,
#         updatedAt: Date.now(), // optional: replace with serverTimestamp()
#     }),
# });



#             console.log(newChatRef);
#             console.log(newChatRef.id);

#         }catch(err) {
#             console.log(err)

#         }
#     }
#     return (
#         <div className="adduser">
#             <form onSubmit={handleSearch}>
#                 <input type="text" placeholder="Username" name="username"/>
#                 <button>Search</button>
#             </form>
#             {user && <div className="user">
#                 <div className="detail">
#                     <img src={user.avatar || "./avatar.png"} alt=""/>
#                     <span>{user.username}</span>
#                 </div>
#                 <button onClick={handleadd}>Add User</button>

#             </div>}
#         </div>
#     )
# };
# export default AddUser;